// WARNING: This file is machine generated by fidlgen.

#include <fidl_llcpp_basic.h>

namespace fidl {
namespace test {
namespace llcpp {
namespace basictypes {

void ::fidl::test::llcpp::basictypes::SimpleUnion::SizeAndOffsetAssertionHelper() {
  static_assert(offsetof(::fidl::test::llcpp::basictypes::SimpleUnion, field_a_) == 4);
  static_assert(offsetof(::fidl::test::llcpp::basictypes::SimpleUnion, field_b_) == 4);
  static_assert(sizeof(::fidl::test::llcpp::basictypes::SimpleUnion) == ::fidl::test::llcpp::basictypes::SimpleUnion::PrimarySize);
}

namespace {

[[maybe_unused]]
constexpr uint32_t kTestInterface_ConsumeSimpleStruct_Ordinal = 728053387u;
extern "C" const fidl_type_t fidl_test_llcpp_basictypes_TestInterfaceConsumeSimpleStructRequestTable;
extern "C" const fidl_type_t fidl_test_llcpp_basictypes_TestInterfaceConsumeSimpleStructResponseTable;
[[maybe_unused]]
constexpr uint32_t kTestInterface_ConsumeSimpleUnion_Ordinal = 776403313u;
extern "C" const fidl_type_t fidl_test_llcpp_basictypes_TestInterfaceConsumeSimpleUnionRequestTable;
extern "C" const fidl_type_t fidl_test_llcpp_basictypes_TestInterfaceConsumeSimpleUnionResponseTable;

}  // namespace

TestInterface::TestInterface() = default;
TestInterface::~TestInterface() = default;

zx_status_t TestInterface::ConsumeSimpleStruct(SimpleStruct& arg, int32_t* out_status, int32_t* out_field) {
  return ZX_ERR_NOT_SUPPORTED;
}

zx_status_t TestInterface::ConsumeSimpleStruct(::fidl::BytePart& request_buffer, ::fidl::BytePart& response_buffer, SimpleStruct& arg, int32_t* out_status, int32_t* out_field) {
  return ZX_ERR_NOT_SUPPORTED;
}

::fidl::DecodeResult<TestInterface::ConsumeSimpleStructResponse> TestInterface::ConsumeSimpleStruct(::fidl::DecodedMessage<ConsumeSimpleStructRequest> params, ::fidl::BytePart response_buffer) {
  ::fidl::DecodeResult<TestInterface::ConsumeSimpleStructResponse> result;
  return result;
}


zx_status_t TestInterface::ConsumeSimpleUnion(SimpleUnion& arg, uint32_t* out_index, int32_t* out_field) {
  return ZX_ERR_NOT_SUPPORTED;
}

zx_status_t TestInterface::ConsumeSimpleUnion(::fidl::BytePart& request_buffer, ::fidl::BytePart& response_buffer, SimpleUnion& arg, uint32_t* out_index, int32_t* out_field) {
  return ZX_ERR_NOT_SUPPORTED;
}

::fidl::DecodeResult<TestInterface::ConsumeSimpleUnionResponse> TestInterface::ConsumeSimpleUnion(::fidl::DecodedMessage<ConsumeSimpleUnionRequest> params, ::fidl::BytePart response_buffer) {
  ::fidl::DecodeResult<TestInterface::ConsumeSimpleUnionResponse> result;
  return result;
}


}  // namespace basictypes
}  // namespace llcpp
}  // namespace test
}  // namespace fidl
